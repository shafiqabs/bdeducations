<?php

namespace Setting\Bundle\AppearanceBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MenuGroupingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MenuGroupingRepository extends EntityRepository
{

    public function insertMenuGrouping($posts,$user,$menuGroup)
    {

        //var_dump($posts);


       // exit;
        $i = 1;
        $em = $this->_em;
        if(!empty($posts['menuid'])){
            foreach ($posts['menuid'] as $post ){

                $menu = $em->getRepository('SettingAppearanceBundle:Menu')->find($post);
                $menuGroup = $em->getRepository('SettingAppearanceBundle:MenuGroup')->find($menuGroup);

                $menuGroups = $em->getRepository('SettingAppearanceBundle:MenuGrouping')->findBy(array('user'=>$user,'menuGroup'=>$menuGroup,'menu'=>$post));
                if(empty($menuGroups)){
                    $entity = new MenuGrouping();
                    $entity ->setMenu($menu);
                    $entity ->setUser($user);
                    $entity ->setMenuGroup($menuGroup);
                    $entity ->setSorting($i);
                    $em->persist($entity);
                }
                $i++;
            }
            $em->flush();
        }
        $this->removeMenuGrouping($posts,$user,$menuGroup);

    }


    public function removeMenuGrouping($posts,$user,$menuGroup)
    {
        $em = $this->_em;
        if(!empty($posts['delete'])){
            foreach ($posts['delete'] as $post ){

                $menuGroups = $em->getRepository('SettingAppearanceBundle:MenuGrouping')->findBy(array('user'=>$user,'menuGroup'=>$menuGroup,'menu'=>$post));
                if(!empty($menuGroups)){

                    foreach($menuGroups as $menu){

                        $id = $menu->getId();
                        $entity = $em->getRepository('SettingAppearanceBundle:MenuGrouping')->find($id);
                        $em->remove($entity);
                    }

                    $em->flush();

                }
            }
        }


    }



    public function setMenuOrdering($data)
    {

        $i = 1;
        $em = $this->_em;
        $qb = $em->createQueryBuilder();

        foreach ($data as $key => $value){
            $val = ($value) ? $value: 0 ;
            $q = $qb->update('SettingAppearanceBundle:MenuGrouping', 'mg')
                ->set('mg.parent', $val)
                ->set('mg.sorting', $i)
                ->where('mg.id = :id')
                ->setParameter('id', $key)
                ->getQuery()
                ->execute();
            $i++;

        }


    }

    public function getMenuSorting($user,$menuGroup){

        $em = $this->_em;
        $entities = $em->getRepository('SettingAppearanceBundle:MenuGrouping')->findBy(array('menuGroup' => $menuGroup, 'user' => $user, 'parent' => null),array('sorting'=>'ASC'));
        $data ='';
        $data .='<ol class="dd-list sortable" >';
        foreach( $entities as $entity){

            $parent = $entity->getId();
            $data .='<li style="display:list-item" class="dd-item dd3-item " id="menuItem_'.$entity->getId().'">
                     <div class="menuDiv"><span><div data-id="{{ entity.id }}" class="itemTitle dd-handle dd3-handle"></div>
                     <span class="dd3-content">'.$entity->getMenu()->getMenu().'</span></span></div>';
            $entities = $em->getRepository('SettingAppearanceBundle:MenuGrouping')->findBy(array('parent' => $parent),array('sorting'=>'ASC'));
            if($entities){
                $data .='<ol>';
                foreach($entities as $child){
                    $subParent = $child->getId();
                    $data .='<li style="display:list-item" class="dd-item dd3-item " id="menuItem_'.$child -> getId().'">
                             <div class="menuDiv"><span><div data-id="{{ entity.id }}" class="itemTitle dd-handle dd3-handle"></div>
                             <span class="dd3-content">'.$child -> getMenu() -> getMenu().'</span></span></div>';
                    $entities = $em->getRepository('SettingAppearanceBundle:MenuGrouping')->findBy(array('parent' => $subParent ),array('sorting'=>'ASC'));
                    if($entities){
                        $data .='<ol>';
                        foreach($entities as $subChild){

                            $data .='<li style="display:list-item" class="dd-item dd3-item " id="menuItem_'.$subChild -> getId().'">
                                         <div class="menuDiv"><span><div data-id="{{ entity.id }}" class="itemTitle dd-handle dd3-handle"></div>
                                         <span class="dd3-content">'.$subChild -> getMenu() -> getMenu().'</span></span></div></li>';
                        }
                        $data .='</ol>';
                    }

                    $data .='</li>';
                }
                $data .='</ol>';
            }
            $data .='</li>';

        }
        $data .='</ol>';

        return $data;

    }


}
